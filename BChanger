Add-Type -AssemblyName System.Windows.Forms
[System.Windows.Forms.Application]::EnableVisualStyles()

$Form                            = New-Object system.Windows.Forms.Form
$Form.ClientSize                 = '400,100'
$Form.text                       = "Form"
$Form.TopMost                    = $false
$Form.Text                       = "background changer by krra & doke"
$Label                           = New-Object System.Windows.Forms.Label
$Label.Text                      = "Change your Background with the number of days to go"
$Label.AutoSize                  = $True
$Label.Location                  = new-object System.Drawing.Point(45,5)
$Form.Controls.Add($Label)
#$Form.Icon                       = [System.IconExtractor]::Extract("shell32.dll", 42, $true)

$Update                          = New-Object system.Windows.Forms.Button
$Update.text                     = "Update Wallpaper!"
$Update.width                    = 350
$Update.height                   = 30
$Update.location                 = New-Object System.Drawing.Point(25,60)
$Update.Font                     = 'Microsoft Sans Serif,8'

$Progress                        = New-Object system.Windows.Forms.ProgressBar
$Progress.Maximum                = 100
$Progress.Minimum                = 0
$Progress.Location               = new-object System.Drawing.Point(27,25)
$Progress.size                   = new-object System.Drawing.Size(346,20)
$Progress.style                  = "Continuous"
$i = 0;
#########
    $bmp = New-Object System.Drawing.Bitmap(16,16)
    $g = [System.Drawing.Graphics]::FromImage($bmp)
    $g.drawline([System.Drawing.Pens]::Black,0,0,15,0)
    $g.drawline([System.Drawing.Pens]::Black,15,0,15,4)
    $g.drawline([System.Drawing.Pens]::Black,15,4,10,4)
    $g.drawline([System.Drawing.Pens]::Black,10,4,10,15)
    $g.drawline([System.Drawing.Pens]::Black,10,15,6,15)
    $g.drawline([System.Drawing.Pens]::Black,6,15,6,4)
    $g.drawline([System.Drawing.Pens]::Black,6,4,0,4)
    $g.drawline([System.Drawing.Pens]::Black,0,4,0,0)
    $g.drawline([System.Drawing.Pens]::Blue,1,1,14,1)
    $g.drawline([System.Drawing.Pens]::Blue,1,2,14,2)
    $g.drawline([System.Drawing.Pens]::Blue,1,3,14,3)
    $g.drawline([System.Drawing.Pens]::Blue,7,4,7,14)
    $g.drawline([System.Drawing.Pens]::Blue,8,4,8,14)
    $g.drawline([System.Drawing.Pens]::Blue,9,4,9,14)
    $ico = [System.Drawing.Icon]::FromHandle($bmp.GetHicon())
    $Form.Icon = $ico
    ###
    # End of the icon generation and loading
    ###
#########
####
$NotifyIcon= New-Object System.Windows.Forms.NotifyIcon
$ContextMenu = New-Object System.Windows.Forms.ContextMenu
$Form.ShowInTaskbar = $true
$NotifyIcon.Icon =  $ico
$NotifyIcon.Visible = $True
$NotifyIcon.ContextMenu = $ContextMenu
$NotifyIcon.contextMenu.MenuItems.AddRange($MenuItem)

$MenuItem.Text = "Exit"
$MenuItem.add_Click({
    $NotifyIcon.Visible = $False
    $Form.close()
})
####

$Form.controls.Add($Progress)
$Form.controls.AddRange(@($Update))

$Update.Add_Click({ $Update.enabled = $false; $Form.refresh(); changer; $Update.enabled = $true; $Form.refresh() })

function changer {
Add-Type -AssemblyName System.Drawing
#$filename = "$home\foo.png"
$enddate = "01/06/2019"
$freedays = 1
$filename = "$home\AppData\Roaming\Microsoft\Windows\Themes\TranscodedWallpaper.jpg"
Remove-Item -path $filename

For($i = 1; $i -le 662; $i++)
{  
 
    #$i =($i / $files.count*100)
    #Write-Progress -Activity "Collecting files here :)" -PercentComplete (($i*100)/30) -Status "Finding file"
    $Progress.Value=$i*100/662
       sleep -Milliseconds 100

    $Update.text= -join ("updating wallpaper - completed: ", $Progress.Value, "%")
       If($i -eq 30) {rundll32.exe user32.dll, UpdatePerUserSystemParameters;}
       ElseIf($i -eq 60) {rundll32.exe user32.dll, UpdatePerUserSystemParameters}
       ElseIf($i -eq 90) {rundll32.exe user32.dll, UpdatePerUserSystemParameters}
       ElseIf($i -eq 120) {
             $bmp = new-object System.Drawing.Bitmap 1920,1080
             $font = new-object System.Drawing.Font Consolas,48
             $brushBg = [System.Drawing.Brushes]::Orange
             $brushFg = [System.Drawing.Brushes]::White
             $graphics = [System.Drawing.Graphics]::FromImage($bmp)
             $graphics.FillRectangle($brushBg,0,0,$bmp.Width,$bmp.Height)
             $date1 = (New-TimeSpan -Start (Get-Date ) -End( Get-Date $enddate )).Days+1 - $freedays
             $text1 = -join ($date1, " work days")
             $graphics.DrawString($text1,$font,$brushFg,500,230)
             $date2 = (New-TimeSpan -Start (Get-Date ) -End( Get-Date $enddate )).Days+1
             $text2 = -join ($date2, " days to go")
             $graphics.DrawString($text2,$font,$brushFg,500,330)
             
             $graphics.Dispose()
             $imageformat = "System.Drawing.Imaging.ImageFormat" -as [type]
             $bmp.Save($filename,$imageformat::jpeg)
             Set-ItemProperty -path 'HKCU:\Control Panel\Desktop\' -name wallpaper -value $filename
       }
       
       ElseIf($i -eq 660) {rundll32.exe user32.dll, UpdatePerUserSystemParameters; rundll32.exe user32.dll, UpdatePerUserSystemParameters; rundll32.exe user32.dll, UpdatePerUserSystemParameters; rundll32.exe user32.dll, UpdatePerUserSystemParameters}
}
$Update.text                     = "Update Wallpaper!"
}
[void]$Form.ShowDialog()
